/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

const tintColorLight = "#0a7ea4";
const tintColorDark = "#fff";

export const Colors = {
  mainDark: "#181818",
  light: {
    primary: "rgb(0, 103, 131)",
    onPrimary: "rgb(255, 255, 255)",
    primaryContainer: "rgb(188, 233, 255)",
    onPrimaryContainer: "rgb(0, 31, 42)",
    secondary: "rgb(0, 104, 116)",
    onSecondary: "rgb(255, 255, 255)",
    secondaryContainer: "rgb(151, 240, 255)",
    onSecondaryContainer: "rgb(0, 31, 36)",
    tertiary: "rgb(64, 90, 169)",
    onTertiary: "rgb(255, 255, 255)",
    tertiaryContainer: "rgb(219, 225, 255)",
    onTertiaryContainer: "rgb(0, 23, 77)",
    error: "rgb(186, 26, 32)",
    onError: "rgb(255, 255, 255)",
    errorContainer: "rgb(255, 218, 214)",
    onErrorContainer: "rgb(65, 0, 3)",
    background: "rgb(251, 252, 254)",
    onBackground: "rgb(25, 28, 30)",
    surface: "rgb(251, 252, 254)",
    onSurface: "rgb(25, 28, 30)",
    surfaceVariant: "rgb(220, 228, 233)",
    onSurfaceVariant: "rgb(64, 72, 76)",
    outline: "rgb(112, 120, 125)",
    outlineVariant: "rgb(192, 200, 205)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(46, 49, 50)",
    inverseOnSurface: "rgb(239, 241, 243)",
    inversePrimary: "rgb(99, 211, 255)",
    elevation: {
      level0: "transparent",
      level1: "rgb(238, 245, 248)",
      level2: "rgb(231, 240, 244)",
      level3: "rgb(223, 236, 241)",
      level4: "rgb(221, 234, 239)",
      level5: "rgb(216, 231, 237)",
    },
    surfaceDisabled: "rgba(25, 28, 30, 0.12)",
    onSurfaceDisabled: "rgba(25, 28, 30, 0.38)",
    backdrop: "rgba(42, 50, 53, 0.4)",
    yellow: "rgb(121, 89, 0)",
    onYellow: "rgb(255, 255, 255)",
    yellowContainer: "rgb(255, 223, 160)",
    onYellowContainer: "rgb(38, 26, 0)",
    succes: "rgb(0, 107, 94)",
    onSucces: "rgb(255, 255, 255)",
    succesContainer: "rgb(118, 248, 226)",
    onSuccesContainer: "rgb(0, 32, 27)",
    parple: "rgb(104, 71, 192)",
    onParple: "rgb(255, 255, 255)",
    parpleContainer: "rgb(232, 221, 255)",
    onParpleContainer: "rgb(33, 0, 93)",
  },
  dark: {
    primary: "rgb(99, 211, 255)",
    onPrimary: "rgb(0, 53, 69)",
    primaryContainer: "rgb(0, 77, 99)",
    onPrimaryContainer: "rgb(188, 233, 255)",
    secondary: "rgb(79, 216, 235)",
    onSecondary: "rgb(0, 54, 61)",
    secondaryContainer: "rgb(0, 79, 88)",
    onSecondaryContainer: "rgb(151, 240, 255)",
    tertiary: "rgb(181, 196, 255)",
    onTertiary: "rgb(3, 41, 120)",
    tertiaryContainer: "rgb(37, 65, 144)",
    onTertiaryContainer: "rgb(219, 225, 255)",
    error: "rgb(255, 179, 172)",
    onError: "rgb(104, 0, 8)",
    errorContainer: "rgb(147, 0, 16)",
    onErrorContainer: "rgb(255, 218, 214)",
    background: "rgb(25, 28, 30)",
    onBackground: "rgb(225, 226, 228)",
    surface: "rgb(25, 28, 30)",
    onSurface: "rgb(225, 226, 228)",
    surfaceVariant: "rgb(60, 67, 70)",
    onSurfaceVariant: "rgb(192, 200, 205)",
    outline: "rgb(138, 146, 151)",
    outlineVariant: "rgb(64, 72, 76)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(225, 226, 228)",
    inverseOnSurface: "rgb(46, 49, 50)",
    inversePrimary: "rgb(0, 103, 131)",
    elevation: {
      level0: "transparent",
      level1: "rgb(29, 37, 41)",
      level2: "rgb(31, 43, 48)",
      level3: "rgb(33, 48, 55)",
      level4: "rgb(34, 50, 57)",
      level5: "rgb(35, 54, 62)",
    },
    surfaceDisabled: "rgba(225, 226, 228, 0.12)",
    onSurfaceDisabled: "rgba(225, 226, 228, 0.38)",
    backdrop: "rgba(42, 50, 53, 0.4)",
    yellow: "rgb(248, 189, 42)",
    onYellow: "rgb(64, 45, 0)",
    yellowContainer: "rgb(92, 67, 0)",
    onYellowContainer: "rgb(255, 223, 160)",
    succes: "rgb(85, 219, 198)",
    onSucces: "rgb(0, 55, 48)",
    succesContainer: "rgb(0, 80, 71)",
    onSuccesContainer: "rgb(118, 248, 226)",
    parple: "rgb(206, 189, 255)",
    onParple: "rgb(57, 5, 144)",
    parpleContainer: "rgb(80, 43, 167)",
    onParpleContainer: "rgb(232, 221, 255)",
  },
};
